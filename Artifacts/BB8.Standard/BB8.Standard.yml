resources:
  repositories:
  - repository: BB8.Standard
    type: git
    name: BB8.Standard
    trigger:
      branches:
        include:
        - master
        - prerelease/*
  - repository: Pipelines
    type: git
    name: Pipelines
    trigger: none

variables:
- group: Artifacts
- group: ServiceConnections
- group: Snyk
- name: solution
  value: BB8.Standard.sln
- name: buildConfiguration
  value: Debug
- name: projectKey
  value: BB8_BB8.Standard_AYuMlFQ2iLKrQ4ibXtut
- name: buildNumberPrefix
  value: BB8.Standard
- name: restoreBuildProjects
  value: BB8.Standard/BB8.Standard.csproj
- name: workingDirectory
  value: BB8.Standard
- name: testDirectory
  value: BB8.Standard.Tests
- name: testDll
  value: BB8.Standard.Tests/bin/Debug/net7.0/BB8.Standard.Tests.dll
- name: sonarQubeConnection
  value: $(ServiceConnections.SonarQubeBB8.Standard)
- name: breakSonarQubefailure
  value: false
- name: snkyOrganizationId
  value: $(Snyk.OrgIdMyPresidio)

stages:
- stage: SetBuildNumber
  displayName: Set Build Number
  jobs:

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - job:
      displayName: Set Build Number
      pool:
        vmImage: ubuntu-latest
      steps:
      - checkout: BB8.Standard
      - template: Artifacts\_Templates\setBuildId.yml@Pipelines
        parameters:
          buildSourceBranch: $(Build.SourceBranch)
          buildNumberPrefix: $(buildNumberPrefix)
          buildNumber: $(Build.BuildNumber)
  - ${{ else }}:
    - job:
      displayName: Set Build Number
      pool:
        vmImage: ubuntu-latest
      steps:
      - checkout: BB8.Standard
      - template: Artifacts\_Templates\setBuildId.yml@Pipelines
        parameters:
          buildSourceBranch: $(Build.SourceBranch)
          buildNumberPrefix: $(buildNumberPrefix)
          buildNumber: $(Build.BuildNumber)
          pullRequestId: $(System.PullRequest.PullRequestId)

- stage: RunAutomatedTests
  displayName: Run Automated Tests
  jobs:
  - job:
    displayName: Run Automated Tests
    pool:
      vmImage: windows-latest
    steps:
    - checkout: BB8.Standard
    - template: Artifacts\_Templates\packageTest.yml@Pipelines
      parameters:
        solution: $(solution)
        buildConfiguration: $(buildConfiguration)
        vstsFeed: $(Artifacts.FeedId)
        testDll: $(testDll)
- stage: CodeAnalysis
  displayName: Code Analysis
  jobs:
  - job:
    displayName: Run Snyk Scan
    pool:
      vmImage: windows-latest
    steps:
    - checkout: BB8.Standard
    - template: SnykScanners/_Templates/snyk.yml@Pipelines
      parameters:
        snykConnection: $(ServiceConnections.SnykAuthentication)
        solution: $(solution)
        buildConfiguration: $(buildConfiguration)
        vstsFeed: $(Artifacts.FeedId)
        snkyOrganizationId: $(snkyOrganizationId)

  - ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    - job:
      displayName: Run SonarQube Analysis
      pool:
        vmImage: windows-latest
      steps:
      - checkout: BB8.Standard
      - template: SonarQubeScanners/_Templates/sonarQube.yml@Pipelines
        parameters:
          sonarQubeConnection: $(sonarQubeConnection)
          solution: $(solution)
          buildConfiguration: $(buildConfiguration)
          projectKey: $(projectKey)
          vstsFeed: $(Artifacts.FeedId)
          breakSonarQubefailure: '${{ variables.breakSonarQubefailure }}'
          testDll: $(testDll)
  - ${{ else }}:
    - job:
      displayName: Run SonarQube Analysis
      pool:
        vmImage: windows-latest
      steps:
      - checkout: BB8.Standard
      - template: SonarQubeScanners/_Templates/sonarQube.yml@Pipelines
        parameters:
          sonarQubeConnection: $(sonarQubeConnection)
          solution: $(solution)
          buildConfiguration: $(buildConfiguration)
          projectKey: $(projectKey)
          vstsFeed: $(Artifacts.FeedId)
          breakSonarQubefailure: '${{ variables.breakSonarQubefailure }}'
          testDll: $(testDll)
          prId: $(System.PullRequest.PullRequestId)
          prSourceBranch: $(System.PullRequest.SourceBranch)
          prTargetBranch: $(System.PullRequest.TargetBranch)

- ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
  - stage: CreatePackage
    displayName: Create Package
    jobs:
    - job:
      displayName: Create Package
      pool:
        vmImage: ubuntu-latest
      steps:
      - checkout: BB8.Standard
      - template: Artifacts\_Templates\package.yml@Pipelines
        parameters:
          restoreBuildProjects: $(restoreBuildProjects)
          buildConfiguration: $(buildConfiguration)
          vstsFeed: $(Artifacts.FeedId)
