parameters:
- name: solution
  type: string
  default: ''
- name: buildConfiguration
  type: string
  default: ''
- name: vstsFeed
  type: string
  default: ''
- name: dotNetVersion
  type: string
  default: "7.0.x"
- name: testDll
  type: string
  default: ''
- name: userProfile
  type: string
  default: ''
- name: justMockVersion
  type: string
  default: ''

steps:

- task: UseDotNet@2
  displayName: Install .NET Core SDK
  inputs:
    version: ${{parameters.dotNetVersion}}
    performMultiLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: Restore Solution
  inputs:
    command: restore
    projects: ${{parameters.solution}}
    vstsFeed: ${{parameters.vstsFeed}}

- task: VSBuild@1
  displayName: Build Solution
  inputs:
    configuration: ${{parameters.buildConfiguration}}
    solution: ${{parameters.solution}}

- ${{ if ne(parameters.justMockVersion, '') }}:
  - task: vs-publisher-443.jm-vstest-2.JustMockVSTest-2.JustMockVSTest@2
    displayName: Run Automated Tests
    inputs:
      testAssemblyVer2: ${{parameters.testDll}}
      codeCoverageEnabled: True
      diagnosticsEnabled: True
      pathTo64BitJustMockProfiler: '${{parameters.userProfile}}\.nuget\packages\justmock.commercial\${{parameters.justMockVersion}}\runtimes\win-x64\native\Telerik.CodeWeaver.Profiler.dll'
      pathTo32BitJustMockProfiler: '${{parameters.userProfile}}\.nuget\packages\justmock.commercial\${{parameters.justMockVersion}}\runtimes\win-x32\native\Telerik.CodeWeaver.Profiler.dll'
- ${{ else }}:
  - task: VSTest@2
    displayName: Run Automated Tests
    inputs:
      testAssemblyVer2: ${{parameters.testDll}}
      codeCoverageEnabled: True
      diagnosticsEnabled: True