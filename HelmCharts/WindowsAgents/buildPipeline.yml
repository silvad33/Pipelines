# https://aka.ms/yaml

variables:
- group: ServiceConnections
- group: AKSDeployments
- group: WindowsAgents
- name: buildNumberPrefix
  value: Windows.Agents
- name: chartPath
  value: 'HelmCharts/WindowsAgents/Chart'

parameters:

- name: dockerimages
  type: object
  default:

  - repository: w
    displayName: 'Windows Agents'
    buildContext: 'HelmCharts/WindowsAgents/DockerImages/Agents/buildcontext'
    dockerfile: 'HelmCharts/WindowsAgents/DockerImages/Agents/Dockerfile'
    failOnIssues: false

- name: environments
  type: object
  default:

  - displayName: 'Windows Agents'
    namespace: windows-agents
    valuesFile: HelmCharts/WindowsAgents/Chart/values.windowsagents.yaml
    releaseName: w

resources:
  repositories:
  - repository: Pipelines
    type: git
    name: Pipelines
    trigger:
      branches:
        include:
        - main
      paths:
        include:
        - HelmCharts/WindowsAgents

stages:
- stage: SetBuildNumber
  displayName: Set Build Number
  jobs:
  - job:
    displayName: Set Build Number
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: PowerShell@2
      displayName: Set Build Number
      inputs:
        pwsh: true
        targetType: inline
        script: Write-Host "##vso[build.updatebuildnumber]$(buildNumberPrefix)-$(Build.BuildNumber)"

- stage: BuildDockerImages
  displayName: Build Docker Images
  jobs:
  - ${{ each dockerimage in parameters.dockerimages }}:
    - job:
      displayName: Build ${{ dockerimage.displayName }} Docker Image
      pool:
        vmImage: windows-latest
      steps:
      - template: HelmCharts/_Templates/dockerApplicationsWindows.yml@Pipelines
        parameters:
          repository: ${{ dockerimage.repository }}
          buildContext: ${{ dockerimage.buildContext }}
          dockerFile: ${{ dockerimage.dockerFile }}
          containerRegistry: $(ServiceConnections.ContainerRegistry)
          buildId: $(Build.BuildId)

- stage: RunHelmCharts
  displayName: Run Helm Charts
  jobs:
  - ${{ each env in parameters.environments }}:
    - job:
      displayName: Run ${{ env.displayName }} Helm Chart
      pool:
        vmImage: windows-latest
      steps:
        - task: PowerShell@2
          displayName: Replace Tokens for Values YAML
          inputs:
            targetType: inline
            pwsh: true
            script: |
              ((Get-Content -path ${{ env.valuesFile }} -Raw) -replace '~adopat~','$(WindowsAgents.PAT)') | Set-Content -Path ${{ env.valuesFile }}
              ((Get-Content -path ${{ env.valuesFile }} -Raw) -replace '~buildId~','$(Build.BuildId)') | Set-Content -Path ${{ env.valuesFile }}
              ((Get-Content -path ${{ env.valuesFile }} -Raw) -replace '~sumoLogicInstallToken~','$(WindowsAgents.SumoLogicInstallerToken)') | Set-Content -Path ${{ env.valuesFile }}
              Get-Content -path ${{ env.valuesFile }}

        - task: HelmDeploy@0
          displayName: Run Helm Chart
          inputs:
            connectionType: 'Azure Resource Manager'
            azureSubscriptionEndpoint: $(ServiceConnections.AzureResourceManager)
            azureResourceGroup: $(AKSDeployments.AKSResourceGroup)
            kubernetesCluster: $(AKSDeployments.BuildAgentsWinCluster)
            azureSubscriptionForACR: $(ServiceConnections.AzureResourceManager)
            azureResourceGroupForACR: $(AKSDeployments.AKSResourceGroup)
            azureContainerRegistry: $(ServiceConnections.ContainerRegistry)
            namespace: ${{ env.namespace }}
            chartPath: $(chartPath)
            valueFile: ${{ env.valuesFile }}
            releaseName: ${{ env.releaseName }}
            command: 'upgrade'
            waitForExecution: true
            chartType: 'FilePath'
            arguments: "--create-namespace --timeout 10m0s"